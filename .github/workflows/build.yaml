name: Release please workflow

on:
  push:
    branches:
      - master
    paths:
      - "modules/**"
  pull_request:

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  find-release-changes:
    name: Change finder for modules folders
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
      any_modified: ${{ steps.get_changes.outputs.any_modified }}
    steps:
      - name: "Checkout for Push event (full history)"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed dirs
        id: get_changes
        uses: tj-actions/changed-files@v40
        with:
          dir_names: true
          files_ignore: |
            .github/workflows/**
            README.md

      - name: set matrix output
        id: set_matrix
        run: |
          tmp=(${{ steps.get_changes.outputs.all_modified_files }})
          X=($(for d in "${tmp[@]}"; do echo "${d}"; done | sort -u))
          json_array() {
            echo -n '['
            while [ $# -gt 0 ]; do
              x=${1//\\/\\\\}
              echo -n \"${x//\"/\\\"}\"
              [ $# -gt 1 ] && echo -n ', '
              shift
            done
            echo ']'
          }

          matrix=$(json_array "${X[@]}")
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    if: needs.find-release-changes.outputs.any_modified == 'true'
    needs: [find-release-changes]
    strategy:
      fail-fast: false
      matrix:
        folder: ${{ fromJson(needs.find-release-changes.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - id: module
        run: |
          MODULE=$(echo ${{ matrix.folder }} | cut -d "/" -f2)
          echo "module=${MODULE}" >> $GITHUB_ENV
      
      - uses: paulhatch/semantic-version@v5.3.0
        id: version
        with:
          change_path: ${{ matrix.folder }}
          tag_prefix: "${{ env.module }}-v"
          major_pattern: "/^BREAKING CHANGE:|^[^()!:]+(?:\([^()!:]+\))?!:/"
          minor_pattern: "/^feat(?:\([^()!:]+\))?:/"

      
      - name: "Set version output"
        shell: bash
        id: version_output
        run: | 
          echo ":rocket: Calculated \`new_version\` is **${{ steps.version.outputs.version }}**" >> $GITHUB_STEP_SUMMARY
      
      - name: "Set version_tag output"
        shell: bash
        id: version_tag_output
        run: |
          echo ":hammer_and_wrench: Calculated \`new_tag\` is **${{ steps.version.outputs.version_tag }}**" >> $GITHUB_STEP_SUMMARY
        
      - name: "Create GitHub tag and release"
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
